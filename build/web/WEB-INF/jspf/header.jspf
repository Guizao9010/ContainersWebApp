<%-- any content can be specified here e.g.: --%>
<%@ page pageEncoding="UTF-8" %>
<div id="session">
    <nav v-if="data" class="navbar navbar-expand-lg bg-body-tertiary">
        <div class="container-fluid">
            <a class="navbar-brand" href="index.jsp">&nbsp;ContainersWebApp</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarText" aria-controls="navbarText" aria-expanded="false" aria-label="Toggle navigation" >
              <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarText">
              <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                  <a class="nav-link" href="index.jsp">Contêineres</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" href="movements.jsp">Movimentações</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" href="history.jsp">Histórico</a>
                </li>
                <li class="nav-item" v-if="data.role === 'ADMIN'">
                  <a class="nav-link" href="users.jsp">Usuários</a>
                </li>
              </ul>
              <span class="navbar-text">
                <i class="bi bi-person"></i>{{data.name}}
                <button @click="logout()" type="button" class="btn btn-outline-danger">Logout</button>
              </span>
            </div>
        </div>
    </nav>
    <div v-else>
        <div class="card m-2">
          <div class="card-header">
              <h1><i class="bi bi-square"></i>&nbsp;Cadastro de Movimentação de Contêineres</h1>
          </div>
          <div class="card-body" >
            <form class="m-5">
              <div class="mb-3">
                  <label class="form-label"><strong>Usuário</strong></label><br>
                <input v-model="loginUsername" type="text" class="form-control">
              </div>
              <div class="mb-3">
                  <label class="form-label"><strong>Senha</strong></label><br>
                <input v-model="loginPassword" type="password" class="form-control">
              </div>
                <button @click="login()" type="submit" class="btn btn-outline-primary">Login</button>
            </form>
          </div>
        
        </div>
    </div>
    <div v-if="error && error!=='No session'" class="alert alert-danger m-2" role="alert">
        {{error}}
    </div>
</div>
<script>
    const shared = Vue.reactive({ session: null });
    //
    const session = Vue.createApp({
        data() {
            return {
                shared: shared,
                error: null,
                loginUsername: null,
                loginPassword: null,
                data: null
            }
        },
        methods: {
            async request(url = "", method, data) {
                try{
                    const response = await fetch(url, {
                        method: method,
                        headers: {"Content-Type": "application/json", },
                        body: JSON.stringify(data)
                    });
                    if(response.status==200){
                        return response.json();
                    }else{
                        this.error = response.statusText;
                    }
                } catch(e){
                    this.error = e;
                    return null;
                }
            },
            async loadSession() {
                const data = await this.request("/ContainersWebApp/api/session", "GET");
                if(data) {this.data = data; this.error = null; this.shared.session = this.data;}
            },
            async login() {
                const data = await this.request("/ContainersWebApp/api/session", "PUT", {"login": this.loginUsername, "password": this.loginPassword});
                if(data) {this.data = data; this.error = null; this.shared.session = this.data;}
            },
            async logout() {
                const data = await this.request("/ContainersWebApp/api/session", "DELETE");
                if(data) {this.data = null; this.error = null; this.shared.session = this.data;}
            }
        },
        mounted() {
            this.loadSession();
        }
    });
    session.mount('#session');
</script>
